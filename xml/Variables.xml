<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="PVRStatusImageVar">
		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
		<value condition="ListItem.HasTimer | ListItem.HasTimerSchedule">windows/pvr/timer.png</value>
	</variable>
	<variable name="AutoCompletionContentVar">
		<value condition="System.HasAddon(plugin.program.autocompletion) + !System.HasHiddenInput">plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=9</value>
	</variable>
	<variable name="PlaylistLabelVar">
		<value condition="String.IsEqual(ListItem.DbType,episode)">$INFO[ListItem.TVShowtitle,,: ]$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DbType,musicvideo)">$INFO[ListItem.Artist,, - ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="PlaylistLabel2Var">
		<value condition="Window.IsActive(musicplaylist)">$INFO[ListItem.Duration]</value>
		<value>$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
	</variable>
	<variable name="InfoListPathVar">
		<value condition="String.IsEmpty(Container.PluginName)">$INFO[ListItem.FolderPath]</value>
		<value></value>
	</variable>
	<variable name="AddonCountLabel">
		<value condition="Integer.IsGreater(Container(8000).NumItems,10)">&gt;9</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,9)">9</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,8)">8</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,7)">7</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,6)">6</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,5)">5</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,4)">4</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,3)">3</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,2)">2</value>
		<value condition="Integer.IsGreater(Container(8000).NumItems,0)">1</value>
		<value>[COLOR grey]0[/COLOR]</value>
	</variable>
	<variable name="MusicInfoTextboxVar">
		<value condition="String.IsEqual(ListItem.DbType,song)">$INFO[ListItem.Comment,[B]$LOCALIZE[569][/B][CR][COLOR=white],[/COLOR]]</value>
		<value condition="String.IsEqual(ListItem.DbType,album)">$INFO[ListItem.Property(Album_Description),[COLOR=white],[/COLOR]]</value>
		<value condition="String.IsEqual(ListItem.DbType,artist)">$INFO[ListItem.Property(Artist_Description),[COLOR=white],[/COLOR]]</value>
	</variable>
	<variable name="NowPlayingSublabelVar">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Year]$INFO[VideoPlayer.Genre, - ]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
	</variable>
	<variable name="NowPlayingIconVar">
		<value condition="Player.Paused">icons/now-playing/pause.png</value>
		<value>icons/now-playing/play.png</value>
	</variable>
	<variable name="NowPlayingPosterVar">
		<value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="String.IsEmpty(Player.Art(thumb)) + VideoPlayer.Content(livetv)">DefaultTVShows.png</value>
		<value>$INFO[Player.Art(thumb)]</value>
	</variable>
	<variable name="ShiftThumbVar">
		<value condition="ListItem.IsParentFolder">DefaultFolderBackSquare.png</value>
		<value condition="String.IsEmpty(Listitem.Thumb) + [String.IsEqual(listitem.dbtype,album) | String.IsEqual(listitem.dbtype,artist)]">DefaultAudio.png</value>
		<value condition="ListItem.IsFolder + String.IsEmpty(ListItem.Thumb)">DefaultFolderSquare.png</value>
		<value>$INFO[ListItem.Thumb]</value>
	</variable>
	<variable name="MusicInfoThumbVar">
		<value condition="!String.IsEmpty(Listitem.Art(thumb))">$INFO[Listitem.Art(thumb)]</value>
		<value condition="String.IsEqual(listitem.dbtype,artist)">DefaultArtist.png</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">DefaultAlbumCover.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="InfoWallThumbVar">
		<value condition="!String.IsEmpty(Listitem.Art(poster))">$INFO[Listitem.Art(poster)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="IconWallThumbVar">
		<value condition="String.IsEqual(listitem.dbtype,genre) + System.HasAddon(resource.images.moviegenreicons.transparent)">$INFO[ListItem.Label,resource://resource.images.moviegenreicons.transparent/,.png]</value>
		<value condition="String.IsEqual(listitem.dbtype,studio) + System.HasAddon(resource.images.studios.white)">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.isempty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="ListLabel2Var">
		<value condition="String.IsEmpty(Container.PluginName) + Container.Content(tvshows) + String.IsEqual(Container.SortMethod,$LOCALIZE[556])">$INFO[ListItem.Property(WatchedEpisodes)]$INFO[ListItem.Property(TotalEpisodes), / ,]</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[556])">$INFO[ListItem.Year]</value>
		<value condition="!String.isempty(ListItem.Appearances)">$LOCALIZE[38026]: $INFO[ListItem.Appearances]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
	<variable name="ShiftLeftTextBoxVar">
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.Property(description),,[CR]]$INFO[ListItem.PictureDatetime,[COLOR text_highlight]$LOCALIZE[552]:  [/COLOR],[CR]]$INFO[ListItem.PictureResolution,[COLOR text_highlight]$LOCALIZE[169]:  [/COLOR],[CR]]$INFO[ListItem.PictureCamMake,[COLOR text_highlight]$LOCALIZE[31041]:  [/COLOR],[CR]]$INFO[ListItem.PictureCamModel,[COLOR text_highlight]$LOCALIZE[21823]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(listitem.dbtype,artist)">$INFO[ListItem.Genre,[COLOR text_highlight]$LOCALIZE[515]:  [/COLOR],[CR]]$INFO[ListItem.Property(Artist_YearsActive),[COLOR text_highlight]$LOCALIZE[21898]:  [/COLOR],[CR]]$INFO[ListItem.Property(Artist_Style),[COLOR text_highlight]$LOCALIZE[736]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">$INFO[ListItem.Year,[COLOR text_highlight]$LOCALIZE[345]:  [/COLOR],[CR]]$INFO[ListItem.Genre,[COLOR text_highlight]$LOCALIZE[515]:  [/COLOR],[CR]]$INFO[ListItem.Property(album_label),[COLOR text_highlight]$LOCALIZE[21899]:  [/COLOR],[CR]]$INFO[ListItem.Property(album_style),[COLOR text_highlight]$LOCALIZE[736]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(Listitem.DBType,season) | String.IsEqual(Listitem.DBType,tvshow)">$INFO[ListItem.Genre,[COLOR text_highlight]$LOCALIZE[515]:  [/COLOR],[CR]]$INFO[ListItem.Premiered,[COLOR text_highlight]$LOCALIZE[20416]:  [/COLOR]]</value>
		<value>$INFO[ListItem.Genre,[COLOR text_highlight]$LOCALIZE[515]:  [/COLOR],[CR]]$INFO[ListItem.Director,[COLOR text_highlight]$LOCALIZE[20339]:  [/COLOR],[CR]]$INFO[ListItem.Writer,[COLOR text_highlight]$LOCALIZE[20417]:  [/COLOR],[CR]]$INFO[ListItem.Premiered,[COLOR text_highlight]$LOCALIZE[20416]:  [/COLOR]]</value>
	</variable>
	<variable name="ShiftRightTextBoxVar">
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.Size,[COLOR text_highlight]$LOCALIZE[289]:  [/COLOR],[CR]]$INFO[ListItem.PictureAperture,[COLOR text_highlight]$LOCALIZE[21826]:  [/COLOR],[CR]]$INFO[ListItem.PictureFocalLen,[COLOR text_highlight]$LOCALIZE[21827]:  [/COLOR],[CR]]$INFO[ListItem.PictureExpTime,[COLOR text_highlight]$LOCALIZE[21830]:  [/COLOR],[CR]]$INFO[ListItem.Date,[COLOR text_highlight]$LOCALIZE[552]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(listitem.dbtype,artist)">$INFO[ListItem.Property(artist_description)]</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">$INFO[ListItem.Property(album_description)]</value>
		<value condition="!String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="SelectLabel">
		<value condition="Control.IsVisible(3)">[COLOR=button_focus]$INFO[Container(3).NumItems][/COLOR] $LOCALIZE[31036] - [COLOR=button_focus]$INFO[Container(3).CurrentPage]/$INFO[Container(3).NumPages][/COLOR]</value>
		<value>[COLOR=button_focus]$INFO[Container(6).NumItems][/COLOR] $LOCALIZE[31036] - [COLOR=button_focus]$INFO[Container(6).CurrentPage]/$INFO[Container(6).NumPages][/COLOR]</value>
	</variable>
	<variable name="FileBrowserSelectLabel">
		<value condition="Control.IsVisible(450)">[COLOR=button_focus]$INFO[Container(450).NumItems][/COLOR] $LOCALIZE[31036] - [COLOR=button_focus]$INFO[Container(450).CurrentPage]/$INFO[Container(450).NumPages][/COLOR]</value>
		<value>[COLOR=button_focus]$INFO[Container(451).NumItems][/COLOR] $LOCALIZE[31036] - [COLOR=button_focus]$INFO[Container(451).CurrentPage]/$INFO[Container(451).NumPages][/COLOR]</value>
	</variable>
	<variable name="BannerArtVar">
		<value condition="ListItem.IsParentFolder">DefaultBackBanner.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.isempty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>dialogs/dialog-bg-nobo.png</value>
	</variable>
	<variable name="FanartImageVar">
		<value condition="ListItem.IsParentFolder">special://skin/extras/home-images/movie.jpg</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="ListBoxInfoVar">
		<value condition="String.IsEqual(Container.FolderPath,addons://outdated/) + !String.IsEmpty(ListItem.Addonnews)">$INFO[ListItem.Addonnews]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.AddonDescription]</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">$INFO[ListItem.Property(album_description)]</value>
		<value condition="String.IsEqual(listitem.dbtype,musicvideo) | String.IsEqual(listitem.dbtype,video)">$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]: [/COLOR],[CR]]$INFO[ListItem.Plot]</value>
		<value condition="String.IsEqual(listitem.dbtype,artist)">$INFO[ListItem.Property(artist_description)]</value>
		<value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value condition="String.IsEqual(listitem.dbtype,song)">$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]: [/COLOR],[CR]]$INFO[ListItem.Duration,[COLOR button_focus]$LOCALIZE[180]: [/COLOR],[CR]]$INFO[ListItem.Playcount,[COLOR button_focus]$LOCALIZE[567]: [/COLOR],[CR]]</value>
		<value>$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]: [/COLOR],[CR]]</value>
	</variable>
	<variable name="WidgetGenreIconVar">
		<value condition="System.HasAddon(resource.images.moviegenreicons.transparent)">$INFO[ListItem.Label,resource://resource.images.moviegenreicons.transparent/,.png]</value>
		<value>DefaultGenre.png</value>
	</variable>
	<variable name="WidgetStudioIconVar">
		<value condition="System.HasAddon(resource.images.studios.white)">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
		<value>DefaultStudio.png</value>
	</variable>
	<variable name="AddonsLabel2Var">
		<value condition="ListItem.Property(addon.downloading)">$INFO[ListItem.Property(addon.status)]</value>
		<value condition="!String.IsEqual(Container.SortMethod,$LOCALIZE[551])">$INFO[ListItem.Label2]</value>
		<value>$INFO[ListItem.AddonCreator,, - ]$INFO[ListItem.AddonVersion]</value>
	</variable>
	<variable name="RatingSettingLabel2Var">
		<value condition="Skin.HasSetting(star_rating)">$LOCALIZE[563]</value>
		<value condition="Skin.HasSetting(star_userrating)">$LOCALIZE[38018]</value>
		<value condition="Skin.HasSetting(star_onlinerating)">$LOCALIZE[20220]</value>
		<value>$LOCALIZE[16018]</value>
	</variable>
	<variable name="AddonsListIconVar">
		<value condition="!String.IsEmpty(ListItem.AddonBroken)">icons/addonstatus/disable.png</value>
		<value condition="ListItem.Property(addon.orphaned)">icons/addonstatus/orphan.png</value>
		<value condition="ListItem.Property(addon.downloading)">icons/addonstatus/install.png</value>
		<value condition="ListItem.Property(addon.isinstalled) + !ListItem.Property(addon.isenabled) + Window.IsActive(addonbrowser)">icons/addonstatus/disable.png</value>
		<value condition="ListItem.Property(addon.hasupdate)">icons/addonstatus/update.png</value>
		<value condition="ListItem.Property(addon.isinstalled)">OverlayWatched.png</value>
		<value condition="!ListItem.IsParentFolder">OverlayUnwatched.png</value>
	</variable>
	<variable name="ResolutionFlagVar">
		<value condition="ListItem.IsStereoscopic">flags/videoresolution/3D.png</value>
		<value condition="Integer.IsGreater(ListItem.VideoResolution,1080)">flags/videoresolution/4K.png</value>
		<value>$INFO[ListItem.VideoResolution,flags/videoresolution/,.png]</value>
	</variable>
	<variable name="ContainerResolutionFlagVar">
		<value condition="Container.ListItem.IsStereoscopic">flags/videoresolution/3D.png</value>
		<value condition="Integer.IsGreater(Container.ListItem.VideoResolution,1080)">flags/videoresolution/4K.png</value>
		<value>$INFO[Container.ListItem.VideoResolution,flags/videoresolution/,.png]</value>
	</variable>
	<variable name="BannerVar">
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value>$INFO[ListItem.Art(tvshow.banner)]</value>
	</variable>
	<variable name="PosterVar">
		<value condition="ListItem.IsParentFolder">DefaultFolderBackPoster.png</value>
		<value condition="!String.IsEmpty(Container.Art(season.poster)) + Container.Content(episodes)">$INFO[Container.Art(season.poster)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.poster)) + Container.Content(episodes)">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.poster)) + Container.Content(seasons) + Window.IsActive(movieinformation)">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">$INFO[Container.ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster)) + !String.IsEqual(listitem.dbtype,season)">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value>$INFO[ListItem.Art(poster)]</value>
	</variable>
	<variable name="InfoDialogPosterVar">
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
	</variable>
	<variable name="BannerLabel2Var">
		<value condition="String.IsEqual(Listitem.DBType,tvshow)">$INFO[ListItem.Property(WatchedEpisodes)]$INFO[ListItem.Property(TotalEpisodes), / ,]</value>
	</variable>
	<variable name="VideoPlayerForwardRewindVar">
		<value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
	</variable>
	<variable name="SeekLabel">
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$LOCALIZE[773][COLOR=grey] $INFO[Player.SeekStepSize][/COLOR]</value>
		<value condition="Player.Paused">$LOCALIZE[112]</value>
		<value condition="Player.Forwarding">$LOCALIZE[31039] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.Rewinding">$LOCALIZE[31038] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.IsTempo">$LOCALIZE[31142]: $INFO[Player.PlaySpeed]</value>
	</variable>
	<variable name="SeekTimeLabelVar">
		<value condition="!String.IsEmpty(Player.SeekNumeric)">[B]$INFO[Player.SeekNumeric(hh:mm:ss)][/B]</value>
		<value condition="Player.Seeking">$INFO[Player.SeekTime]$INFO[Player.Duration, / ]</value>
		<value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventElapsedTime]$INFO[PVR.EpgEventDuration, / ]</value>
		<value>$INFO[Player.Time]$INFO[Player.Duration, / ]</value>
	</variable>
	<variable name="VideoOSDHelpTextVar">
		<value condition="Control.HasFocus(87) + [Player.Rewinding | Player.Forwarding]">$LOCALIZE[31050]</value>
		<value condition="Control.HasFocus(70011)">$LOCALIZE[20060]</value>
		<value condition="Control.HasFocus(700)">$LOCALIZE[298]</value>
		<value condition="Control.HasFocus(703)">$LOCALIZE[31106]</value>
		<value condition="Control.HasFocus(704)">$LOCALIZE[24012]</value>
		<value condition="Control.HasFocus(804)">$LOCALIZE[31092]</value>
		<value condition="Control.HasFocus(70040)">$LOCALIZE[19019]</value>
		<value condition="Control.HasFocus(70041)">$LOCALIZE[19069]</value>
		<value condition="Control.HasFocus(70043)">$LOCALIZE[5]</value>
		<value condition="Control.HasFocus(255)">$LOCALIZE[36501]</value>
		<value condition="Control.HasFocus(606)+ PVR.IsRecordingPlayingChannel">$LOCALIZE[19059]</value>
		<value condition="Control.HasFocus(606)">$LOCALIZE[264]</value>
		<value condition="ControlGroup(6000).HasFocus + Player.SeekEnabled">$LOCALIZE[31054]</value>
	</variable>
	<variable name="MusicOSDHelpTextVar">
		<value condition="Control.HasFocus(620)">$LOCALIZE[31033]$INFO[MusicPlayer.UserRating, : ]</value>
		<value condition="Control.HasFocus(704)">$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</value>
		<value condition="Control.HasFocus(607) + Playlist.IsRandom">$LOCALIZE[590]: $LOCALIZE[16041]</value>
		<value condition="Control.HasFocus(607)">$LOCALIZE[590]: $LOCALIZE[16039]</value>
		<value condition="Control.HasFocus(703)">$LOCALIZE[24013]</value>
		<value condition="Control.HasFocus(5000)">$LOCALIZE[10004]</value>
	</variable>
	<variable name="SkinSettingsHelpTextVar">
		<value condition="Container(9000).HasFocus(1)">$LOCALIZE[31129]</value>
		<value condition="Container(9000).HasFocus(2)">$LOCALIZE[31130]</value>
	</variable>
	<variable name="DSPManagerHelpTextVar">
		<value condition="Control.HasFocus(20)">$INFO[Container(20).ListItem.Property(Description)]</value>
		<value condition="Control.HasFocus(21)">$INFO[Container(21).ListItem.Property(Description)]</value>
		<value>$INFO[Container(9000).ListItem.Label2]</value>
	</variable>
	<variable name="VolumeIconVar">
		<value condition="Player.Muted">dialogs/volume/mute.png</value>
		<value condition="Integer.IsGreater(Player.Volume,66)">dialogs/volume/volume.png</value>
		<value condition="Integer.IsGreater(Player.Volume,33)">dialogs/volume/volume2.png</value>
		<value condition="player.passthrough">dialogs/volume/volume.png</value>
		<value>dialogs/volume/volume1.png</value>
	</variable>
	<variable name="LabelRuntimeHours">
		<value condition="Integer.IsEqual(ListItem.Duration(hh),0)"></value>
		<value condition="Integer.IsEqual(ListItem.Duration(hh),1)">$INFO[ListItem.Duration(h),, $LOCALIZE[31500]]</value>
		<value condition="Integer.IsLess(ListItem.Duration(hh),10)">$INFO[ListItem.Duration(h),, $LOCALIZE[12392]]</value>
		<value>$INFO[ListItem.Duration(hh),, $LOCALIZE[12392]]</value>
	</variable>
	<variable name="LabelRuntimeMinutes">
		<value condition="Integer.IsEqual(ListItem.Duration(mm),0)"></value>
		<value condition="Integer.IsEqual(ListItem.Duration(mm),1)">$INFO[ListItem.Duration(m),, $LOCALIZE[31501]]</value>
		<value condition="Integer.IsLess(ListItem.Duration(mm),10)">$INFO[ListItem.Duration(m),, $LOCALIZE[12391]]</value>
		<value>$INFO[ListItem.Duration(mm),, $LOCALIZE[12391]]</value>
	</variable>
	<variable name="LabelRuntime">
		<value condition="Integer.IsGreaterOrEqual(ListItem.Duration(hh),1)">$VAR[LabelRuntimeHours] $VAR[LabelRuntimeMinutes]</value>
		<value>$VAR[LabelRuntimeMinutes]</value>
	</variable>
	<variable name="LabelTotalEpisodes">
		<value condition="!String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalEpisodes)] $LOCALIZE[20453]</value>
	</variable>
	<variable name="ListSubLabelVar">
		<value condition="ListItem.IsCollection"></value>
		<value condition="Container.Content(movies)">[COLOR grey]$INFO[ListItem.Year]  ∙  $VAR[LabelRuntime][/COLOR]</value>
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">[COLOR grey]$INFO[ListItem.Year]  ∙  $INFO[ListItem.Property(TotalEpisodes)] $LOCALIZE[20453][/COLOR]</value>
		<value condition="Container.Content(episodes)">[COLOR grey]$INFO[ListItem.Season,$LOCALIZE[20373] , ]$INFO[ListItem.Episode,$LOCALIZE[20359] ][/COLOR]</value>
		<value>[COLOR grey]$INFO[ListItem.Year][/COLOR]</value>
	</variable>
	<variable name="ListOutlineVar">
		<value condition="!String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="VideoInfoMainLabelVar">
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="VideoInfoSubLabelVar">
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.Season]$INFO[ListItem.Episode,[COLOR text_fade]x[/COLOR],: ]$INFO[ListItem.TVShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie)">$INFO[ListItem.Tagline,[COLOR text_fade][I],[/I][/COLOR]]</value>
	</variable>
	<variable name="VideoInfoBottomLabelVar">
		<value condition="Control.HasFocus(8)">$INFO[ListItem.LastPlayed,$LOCALIZE[568]: ]</value>
		<value condition="Control.HasFocus(6)">$INFO[ListItem.FileNameAndPath]</value>
	</variable>
	<variable name="VideoInfoGenresVar">
		<value condition="ListItem.IsCollection"></value>
		<value>[COLOR text_fade]$INFO[ListItem.Genre][/COLOR]</value>
	</variable>
	<variable name="VideoInfoFactsVar">
		<value condition="ListItem.IsCollection"></value>
		<value>$INFO[ListItem.Year,,[CR]]$INFO[ListItem.Genre,[COLOR text_fade],[/COLOR][CR]]$VAR[LabelRuntime]$VAR[LabelTotalEpisodes]</value>
	</variable>
	<variable name="VideoInfoCrewVar">
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.Property(description),,[CR]]$INFO[ListItem.PictureDatetime,[COLOR text_highlight]$LOCALIZE[552]:  [/COLOR],[CR]]$INFO[ListItem.PictureResolution,[COLOR text_highlight]$LOCALIZE[169]:  [/COLOR],[CR]]$INFO[ListItem.PictureCamMake,[COLOR text_highlight]$LOCALIZE[31041]:  [/COLOR],[CR]]$INFO[ListItem.PictureCamModel,[COLOR text_highlight]$LOCALIZE[21823]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(listitem.dbtype,artist)">$INFO[ListItem.Genre,[COLOR text_highlight]$LOCALIZE[515]:  [/COLOR],[CR]]$INFO[ListItem.Property(Artist_YearsActive),[COLOR text_highlight]$LOCALIZE[21898]:  [/COLOR],[CR]]$INFO[ListItem.Property(Artist_Style),[COLOR text_highlight]$LOCALIZE[736]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">$INFO[ListItem.Year,[COLOR text_highlight]$LOCALIZE[345]:  [/COLOR],[CR]]$INFO[ListItem.Genre,[COLOR text_highlight]$LOCALIZE[515]:  [/COLOR],[CR]]$INFO[ListItem.Property(album_label),[COLOR text_highlight]$LOCALIZE[21899]:  [/COLOR],[CR]]$INFO[ListItem.Property(album_style),[COLOR text_highlight]$LOCALIZE[736]:  [/COLOR],[CR]]</value>
		<value>$INFO[ListItem.Director,[COLOR text_highlight][B]$LOCALIZE[20339]:  [/B][/COLOR]]</value>
	</variable>
	<variable name="ShiftRightTextBoxVar">
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.Size,[COLOR button_focus]$LOCALIZE[289]:  [/COLOR],[CR]]$INFO[ListItem.PictureAperture,[COLOR button_focus]$LOCALIZE[21826]:  [/COLOR],[CR]]$INFO[ListItem.PictureFocalLen,[COLOR button_focus]$LOCALIZE[21827]:  [/COLOR],[CR]]$INFO[ListItem.PictureExpTime,[COLOR button_focus]$LOCALIZE[21830]:  [/COLOR],[CR]]$INFO[ListItem.Date,[COLOR button_focus]$LOCALIZE[552]:  [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(listitem.dbtype,artist)">$INFO[ListItem.Property(artist_description)]</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">$INFO[ListItem.Property(album_description)]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="NowPlayingBreadcrumbsVar">
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Title]</value>
		<value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[VideoPlayer.Season,[COLOR button_focus]S,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E,: [/COLOR]]$INFO[VideoPlayer.Title]</value>
		<value condition="Window.IsActive(fullscreenvideo)">$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, ([COLOR button_focus],[/COLOR])]</value>
		<value condition="MusicPartyMode.Enabled">$LOCALIZE[589]</value>
		<value>$LOCALIZE[31000]...</value>
	</variable>
	<variable name="OSDSubLabelVar">
		<value condition="Window.IsActive(visualisation) + Integer.IsGreater(Playlist.Length,1)">$LOCALIZE[554] $INFO[Playlist.Position] / $INFO[Playlist.Length]</value>
		<value condition="VideoPlayer.Content(musicvideos)">$INFO[VideoPlayer.Artist]$INFO[VideoPlayer.Album, - ]</value>
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.Season,[COLOR button_focus]S,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E,: [/COLOR]]$INFO[VideoPlayer.TVShowTitle]</value>
		<value condition="VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording | PVR.IsPlayingEpgTag">$INFO[VideoPlayer.ChannelNumberLabel,([COLOR button_focus],[/COLOR]) ]$INFO[VideoPlayer.ChannelName] $INFO[VideoPlayer.EpisodeName, - ]</value>
		<value>$INFO[VideoPlayer.Genre]</value>
	</variable>
	<variable name="PlayerClearLogoVar">
		<value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
	</variable>
	<variable name="AddonsFanartVar">
		<value condition="Skin.HasSetting(no_fanart)"></value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]$INFO[Container(9000).ListItem.Property(id)]$INFO[Skin.String(HomeFanart.ext)]</value>
	</variable>
	<variable name="HomeFanartVar">
		<value condition="Skin.HasSetting(no_fanart)"></value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Property(FanartCode))">$INFO[Skin.String(WeatherFanart.path)]$INFO[Container.ListItem.Property(FanartCode)]$INFO[Skin.String(WeatherFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path)) + Control.HasFocus(804)">$INFO[Skin.String(HomeFanart.path)]power$INFO[Skin.String(HomeFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path)) + Control.HasFocus(802)">$INFO[Skin.String(HomeFanart.path)]settings$INFO[Skin.String(HomeFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path)) + Control.HasFocus(803)">$INFO[Skin.String(HomeFanart.path)]favorites$INFO[Skin.String(HomeFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path)) + Control.HasFocus(801)">$INFO[Skin.String(HomeFanart.path)]search$INFO[Skin.String(HomeFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path)) + String.IsEqual(Container(9000).ListItem.Property(id),features)">$INFO[Skin.String(HomeFanart.path)]movies$INFO[Skin.String(HomeFanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]$INFO[Container(9000).ListItem.Property(id)]$INFO[Skin.String(HomeFanart.ext)]</value>
	</variable>
	<variable name="MediaFanartVar">
		<value condition="Skin.HasSetting(no_fanart)"></value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="Skin.String(MovieGenreFanart.path) + Container.Content(genres) + Window.IsActive(videos)">$INFO[Skin.String(MovieGenreFanart.path)]$INFO[ListItem.Label]$INFO[Skin.String(MovieGenreFanart.ext)]</value>
		<value condition="Window.IsActive(pictures) + String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.FolderPath]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value condition="Window.IsActive(videos)">$INFO[Skin.String(HomeFanart.path)]$INFO[Container.Content]$INFO[Skin.String(HomeFanart.ext)]</value>
		<value>$INFO[Container.Art(fanart)]</value>
	</variable>
	<variable name="WeatherFanartVar">
		<value condition="!String.IsEmpty(Container.ListItem.Property(FanartCode))">$INFO[Skin.String(WeatherFanart.path)]$INFO[Container.ListItem.Property(FanartCode)]$INFO[Skin.String(WeatherFanart.ext)]</value>
		<value condition="!String.IsEmpty(Window(weather).Property(current.fanartcode)) + !String.IsEmpty(Skin.String(weatherfanart.path))">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$INFO[Skin.String(weatherfanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]weather$INFO[Skin.String(HomeFanart.ext)]</value>
	</variable>
	<variable name="ListWatchedIconVar">
		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
		<value condition="ListItem.IsPlaying">overlays/watched/OverlayPlaying-List.png</value>
		<value condition="ListItem.IsResumable">overlays/watched/resume.png</value>
		<value condition="ListItem.IsCollection">overlays/set.png</value>
		<value condition="ListItem.IsFolder + String.IsEmpty(Listitem.dbtype) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsParentFolder">overlays/folder.png</value>
		<value condition="!String.IsEmpty(ListItem.Overlay)">$INFO[ListItem.Overlay]</value>
		<value condition="!ListItem.IsParentFolder">OverlayUnwatched.png</value>
	</variable>
	<variable name="WallWatchedIconVar">
		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
		<value condition="ListItem.IsCollection">overlays/set.png</value>
		<value condition="ListItem.IsPlaying">overlays/watched/OverlayPlaying-List.png</value>
		<value condition="ListItem.IsResumable">overlays/watched/resume.png</value>
		<value condition="Integer.IsGreater(ListItem.Playcount,0)">$INFO[ListItem.Overlay]</value>
	</variable>
	<!-- Breadcrumbs -->
	<variable name="BreadcrumbsVideoVar">
		<value condition="Container.Content(movies) + String.StartsWith(container.folderpath,special://skin/playlists/shorts)">$LOCALIZE[31502]</value>
		<value condition="Container.Content(movies) | String.StartsWith(container.folderpath,library://video/movies/) | String.StartsWith(container.folderpath,videodb://movies)">$LOCALIZE[342]</value>
		<value condition="Container.Content(musicvideos) | String.StartsWith(container.folderpath,library://video/musicvideos/) | String.StartsWith(container.folderpath,videodb://musicvideos)">$LOCALIZE[20389]</value>
		<value condition="Container.Content(tvshows) | String.StartsWith(container.folderpath,library://video/tvshows/) | String.StartsWith(container.folderpath,videodb://tvshows)">$LOCALIZE[20343]</value>
		<value condition="Container.Content(seasons)">$LOCALIZE[20343]</value>
		<value condition="Container.Content(episodes)">$LOCALIZE[20343]</value>
		<value>$LOCALIZE[3]</value>
	</variable>
	<variable name="BreadcrumbsPVRChannelsVar">
		<value condition="Window.IsActive(TVChannels)">$LOCALIZE[19020] / $LOCALIZE[19019] / $INFO[Control.GetLabel(29)]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[19019] / $INFO[Control.GetLabel(29)]</value>
	</variable>
	<variable name="BreadcrumbsPVRGuideVar">
		<value condition="Window.IsActive(TVGuide)">$LOCALIZE[19020] / $INFO[Control.GetLabel(29)] - $INFO[Control.GetLabel(30)]</value>
		<value>$LOCALIZE[19021] / $INFO[Control.GetLabel(29)] - $INFO[Control.GetLabel(30)]</value>
	</variable>
	<variable name="BreadcrumbsPVRRecordingsVar">
		<value condition="Window.IsActive(TVRecordings)">$LOCALIZE[19020] / $LOCALIZE[19017]$INFO[Control.GetLabel(30), / ]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[19017]$INFO[Control.GetLabel(30), / ]</value>
	</variable>
	<variable name="BreadcrumbsPVRTimersVar">
		<value condition="Window.IsActive(TVTimers)">$LOCALIZE[19020] / $LOCALIZE[19040]</value>
		<value condition="Window.IsActive(RadioTimers)">$LOCALIZE[19021] / $LOCALIZE[19040]</value>
		<value condition="Window.IsActive(TVTimerRules)">$LOCALIZE[19020] / $LOCALIZE[19138]$INFO[Control.GetLabel(29), / ]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[19138]$INFO[Control.GetLabel(29), / ]</value>
	</variable>
	<variable name="BreadcrumbsPVRSearchVar">
		<value condition="Window.IsActive(TVSearch)">$LOCALIZE[19020] / $LOCALIZE[137]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[137]</value>
	</variable>
	<variable name="RepeatButtonColordiffuseVar">
		<value condition="Control.HasFocus(704)">button_focus</value>
		<value>FFFFFFFF</value>
	</variable>
	<variable name="PVRChannelMgrHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
		<value>$LOCALIZE[19199] - $LOCALIZE[19023]</value>
	</variable>
	<variable name="PVRGroupMgrHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19048] - $LOCALIZE[19174]</value>
		<value>$LOCALIZE[19048] - $LOCALIZE[19173]</value>
	</variable>
	<variable name="PVRAreaVar">
		<value condition="Control.HasFocus(100)">$LOCALIZE[19019]</value>
		<value condition="Control.HasFocus(101)">$LOCALIZE[19069]</value>
		<value condition="Control.HasFocus(102)">$LOCALIZE[19017]</value>
		<value condition="Control.HasFocus(103)">$LOCALIZE[19040]</value>
		<value condition="Control.HasFocus(104)">$LOCALIZE[19138]</value>
		<value condition="Control.HasFocus(105)">$LOCALIZE[137]</value>
	</variable>
	<variable name="PlayerControlsRepeatImageVar">
		<value condition="Playlist.IsRepeatOne">osd/fullscreen/buttons/repeat-one.png</value>
		<value condition="Playlist.IsRepeat">osd/fullscreen/buttons/repeat-all.png</value>
		<value>osd/fullscreen/buttons/repeat-off.png</value>
	</variable>
	<variable name="PlayerLabel1">
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
	</variable>
	<variable name="PlayerLabel2">
		<value condition="VideoPlayer.Content(episodes)">$LOCALIZE[20373]$INFO[VideoPlayer.Season,: , / ]$LOCALIZE[20359]$INFO[VideoPlayer.Episode,: ]</value>
		<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Year]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasAudio">[COLOR grey]$INFO[MusicPlayer.Album][/COLOR]$INFO[MusicPlayer.Year, [,] ]</value>
	</variable>
	<variable name="PlayerLabel3">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="VideoPlayer.Content(movies) | VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Genre]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.TrackNumber,,: ][COLOR=grey]$INFO[Player.Title][/COLOR]</value>
	</variable>
	<variable name="PVRTimerIcon">
		<value condition="ListItem.IsRecording">icons/pvr/PVR-IsRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">icons/pvr/PVR-HasTimerScheduleError.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">icons/pvr/PVR-HasTimerError.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerScheduleConflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">icons/pvr/PVR-HasRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerScheduleDisabled.png</value>
		<value condition="ListItem.HasTimer + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerDisabled.png</value>
		<value condition="ListItem.HasTimerSchedule">icons/pvr/PVR-HasTimerSchedule.png</value>
		<value condition="ListItem.HasTimer">icons/pvr/PVR-HasTimer.png</value>
	</variable>
	<variable name="SeasonEpisodeLabel">
		<value condition="String.IsEmpty(ListItem.EpisodeName)">$INFO[ListItem.Season,S]$INFO[ListItem.Episode,E]</value>
		<value>$INFO[ListItem.Season,S]$INFO[ListItem.Episode,E,: ]</value>
	</variable>
	<variable name="ExpirationDateTimeLabel">
		<value condition="!String.IsEmpty(ListItem.ExpirationDate)">[COLOR grey]$LOCALIZE[19299]:[/COLOR] $INFO[ListItem.ExpirationDate] $INFO[ListItem.ExpirationTime][CR]</value>
	</variable>
	<variable name="VideoHWDecoder">
		<value condition="Player.Process(videohwdecoder)">HW</value>
		<value>SW</value>
	</variable>
	<variable name="AddonNewsVar">
		<value condition="!String.IsEmpty(ListItem.AddonNews)">$LOCALIZE[31136]</value>
	</variable>
	<variable name="TimersSubLabel">
		<value condition="[Window.IsActive(tvtimerrules) | Window.IsActive(radiotimerrules)] + !ListItem.HasTimerSchedule">$INFO[ListItem.Timertype]</value>
		<value>$INFO[ListItem.EpisodeName]</value>
	</variable>
	<variable name="BackgroundOverlayTypeVar">
		<value condition="String.IsEqual(Skin.String(background_overlay),0)">$LOCALIZE[231]</value>
		<value>$INFO[Skin.String(background_overlay),$LOCALIZE[467] ]</value>
	</variable>
	<variable name="MasterModeLabel">
		<value condition="!System.IsMaster">$LOCALIZE[20045]</value>
		<value>$LOCALIZE[20046]</value>
	</variable>
	<variable name="FilmRatingFlagVar">
		<!-- US (IMDB) -->
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Rated R)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Rated R)]">flags/filmrating/mpaa_r.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Rated PG-13)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Rated PG-13)]">flags/filmrating/mpaa_pg13.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Rated PG)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Rated PG)]">flags/filmrating/mpaa_pg.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Rated NC)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Rated NC)]">flags/filmrating/mpaa_nc17.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Rated G)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Rated G)]">flags/filmrating/mpaa_general.png</value>
		<!-- US (TMDB) -->
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,R)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,R)]">flags/filmrating/mpaa_r.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,PG-13)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,PG-13)]">flags/filmrating/mpaa_pg13.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,PG)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,PG)]">flags/filmrating/mpaa_pg.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,NC-17)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,NC-17)]">flags/filmrating/mpaa_nc17.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,G)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,G)]">flags/filmrating/mpaa_general.png</value>
		<!-- US (TV) -->
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,TV-14)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,TV-14)]">flags/filmrating/tv_14.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,TV-G)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,TV-G)]">flags/filmrating/tv_g.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,TV-MA)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,TV-MA)]">flags/filmrating/tv_ma.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,TV-PG)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,TV-PG)]">flags/filmrating/tv_pg.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,TV-Y7)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,TV-Y7)]">flags/filmrating/tv_y7.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + StringCompare(ListItem.MPAA,TV-Y)] | [IsEmpty(ListItem.MPAA) + StringCompare(VideoPlayer.mpaa,TV-Y)]">flags/filmrating/tv_y.png</value>
		<!-- Australia -->
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Australia:R)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Australia:R)]">flags/filmrating/australia_r.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Australia:MA)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Australia:MA)]">flags/filmrating/australia_ma.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Australia:M)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Australia:M)]">flags/filmrating/australia_m.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Australia:PG)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Australia:PG)]">flags/filmrating/australia_pg.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Australia:G)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Australia:G)]">flags/filmrating/australia_g.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Australia:E)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Australia:E)]">flags/filmrating/australia_e.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Australia:X)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Australia:X)]">flags/filmrating/australia_x.png</value>
		<!-- United Kingdom -->
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,UK:U)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,UK:U)]">flags/filmrating/bbfc_u.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,UK:PG)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,UK:PG)]">flags/filmrating/bbfc_pg.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,UK:12A)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,UK:12A)]">flags/filmrating/bbfc_12a.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,UK:12)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,UK:12)]">flags/filmrating/bbfc_12.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,UK:15)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,UK:15)]">flags/filmrating/bbfc_15.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,UK:18)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,UK:18)]">flags/filmrating/bbfc_18.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,UK:X)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,UK:X)]">flags/filmrating/bbfc_r18.png</value>
		<!-- Germany -->
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Germany:0)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Germany:0)]">flags/filmrating/germany_0.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Germany:6)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Germany:6)]">flags/filmrating/germany_6.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Germany:12)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Germany:12)]">flags/filmrating/germany_12.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Germany:16)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Germany:16)]">flags/filmrating/germany_16.png</value>
		<value condition="[!IsEmpty(ListItem.MPAA) + String.StartsWith(ListItem.MPAA,Germany:18)] | [IsEmpty(ListItem.MPAA) + String.StartsWith(VideoPlayer.mpaa,Germany:18)]">flags/filmrating/germany_18.png</value>
	</variable>
	<variable name="StarRatingFlagVar">
		<!-- User Rating -->
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,10)]">flags/starrating/10.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,9)]">flags/starrating/9.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,8)]">flags/starrating/8.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,7)]">flags/starrating/7.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,6)]">flags/starrating/6.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,5)]">flags/starrating/5.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,4)]">flags/starrating/4.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,3)]">flags/starrating/3.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,2)]">flags/starrating/2.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,1)]">flags/starrating/1.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,0)]">flags/starrating/0.png</value>
		<!-- Scraped Rating -->
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,10)]">flags/starrating/10.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,9)]">flags/starrating/9.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,8)]">flags/starrating/8.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,7)]">flags/starrating/7.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,6)]">flags/starrating/6.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,5)]">flags/starrating/5.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,4)]">flags/starrating/4.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,3)]">flags/starrating/3.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,2)]">flags/starrating/2.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,1)]">flags/starrating/1.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,0)]">flags/starrating/0.png</value>
	</variable>
	<variable name="BigStarRatingFlagVar">
		<!-- User Rating -->
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,10)]">flags/starrating/big10.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,9)]">flags/starrating/big9.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,8)]">flags/starrating/big8.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,7)]">flags/starrating/big7.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,6)]">flags/starrating/big6.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,5)]">flags/starrating/big5.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,4)]">flags/starrating/big4.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,3)]">flags/starrating/big3.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,2)]">flags/starrating/big2.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,1)]">flags/starrating/big1.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_userrating)] + !IsEmpty(ListItem.UserRating) + String.StartsWith(ListItem.UserRating,0)]">flags/starrating/big0.png</value>
		<!-- Scraped Rating -->
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,10)]">flags/starrating/big10.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,9)]">flags/starrating/big9.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,8)]">flags/starrating/big8.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,7)]">flags/starrating/big7.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,6)]">flags/starrating/big6.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,5)]">flags/starrating/big5.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,4)]">flags/starrating/big4.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,3)]">flags/starrating/big3.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,2)]">flags/starrating/big2.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,1)]">flags/starrating/big1.png</value>
		<value condition="[[Skin.HasSetting(star_rating) | Skin.HasSetting(star_onlinerating)] + !IsEmpty(ListItem.Rating) + String.StartsWith(ListItem.Rating,0)]">flags/starrating/big0.png</value>
	</variable>
</includes>
